buildscript {
    def kotlinVersion = "1.3.+"
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlinVersion"
    }
}
subprojects {
    apply plugin: "idea"
    apply plugin: "java"
    apply plugin: "kotlin"
    apply plugin: "kotlin-allopen"
    apply plugin: "jacoco"
    apply plugin: "checkstyle"

    repositories {
        mavenCentral()
        mavenLocal()
    }

    jacocoTestReport {
        reports {
            xml.enabled true
            html.enabled true
            csv.enabled false
            xml.destination file("${buildDir}/reports/jacoco/report.xml")
            html.destination file("${buildDir}/jacocoHtml")
        }
    }

    dependencies {
        compile group: "joda-time", name: "joda-time", version: "2.3"
        compile group: "org.apache.logging.log4j", name: "log4j-api", version: "2.11.1"
        compile group: "org.apache.logging.log4j", name: "log4j-core", version: "2.11.1"

        implementation "org.jetbrains.kotlin:kotlin-stdlib"
        implementation "org.jetbrains.kotlin:kotlin-reflect"
        implementation "com.google.code.gson:gson:2.8.5"

        testCompile "junit:junit:4.11"
        testCompile "org.mockito:mockito-core:2.+"
        testImplementation "org.jetbrains.kotlin:kotlin-test"
        testImplementation "org.jetbrains.kotlin:kotlin-test-junit"
    }

    tasks.withType(Checkstyle) {
        reports {
            xml.enabled true
            html.enabled true
        }
    }

    checkstyle {
        toolVersion = "8.13"
    }

    test {
        afterTest { desc, result ->
            logger.quiet "Executing test ${desc.name} [${desc.className}] with result: ${result.resultType}"
        }
    }

    allOpen {
        annotation("org.elkd.shared.annotations.Mockable")
    }
}
