apply plugin: "application"
apply plugin: "com.google.protobuf"

applicationName = "elkd-server"

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "com.google.protobuf:protobuf-gradle-plugin:0.8.5"
    }
}

def grpcVersion = "1.18.0"
def protobufVersion = "3.6.1"
def protocVersion = "3.6.1"

dependencies {
    compile project(":shared")

    compile group: "commons-cli", name: "commons-cli", version: "1.4"
    compile "log4j:log4j:1.2.17"
    compile "com.google.api.grpc:proto-google-common-protos:1.0.0"
    compile "io.grpc:grpc-alts:${grpcVersion}"
    compile "io.grpc:grpc-netty-shaded:${grpcVersion}"
    compile "io.grpc:grpc-protobuf:${grpcVersion}"
    compile "io.grpc:grpc-stub:${grpcVersion}"
    compile "com.google.protobuf:protobuf-java-util:${protobufVersion}"
    compileOnly "javax.annotation:javax.annotation-api:1.2"

    testCompile "io.grpc:grpc-testing:${grpcVersion}"
    testCompile "org.hamcrest:hamcrest-junit:2.+"
    testCompile group: "com.nhaarman.mockitokotlin2", name: "mockito-kotlin", version: "2.0.0-alpha01"
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:${protocVersion}"
    }
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}"
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {}
        }
    }
}

sourceSets {
    main {
        java {
            srcDirs "core/build/generated/source/proto/main/grpc"
            srcDirs "core/build/generated/source/proto/main/java"
        }
    }
}

mainClassName = "org.elkd.core.Elkd"

task copyLicense {
    outputs.file new File("$buildDir/LICENSE")
    doLast {
        copy {
            from "LICENSE"
            into "$buildDir"
        }
    }
}

applicationDistribution.from(copyLicense) {
    into ""
}

applicationDistribution.into("bin") {
    fileMode = 0755
}
